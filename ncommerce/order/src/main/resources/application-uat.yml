server:
  port: 9003

spring:
  datasource:
    url: jdbc:postgresql://host.docker.internal:5432/ncommerce
    username: user
    password: user
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  application:
    name: order-service

  kafka:
    bootstrap-servers: localhost:9900
    consumer:
      group-id: ncommerce
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
    producer:
      key-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

eureka:
    client:
      service-url:
#        defaultZone: http://localhost:8999/eureka
        defaultZone: http://service-discovery:8999/eureka
  # Enable fetching registry
    instance:
      hostname: order-service
      prefer-ip-address: false
      instance-id: ${spring.application.name}:${server.port}